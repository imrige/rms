{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/Article/Article.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/Article/Article.vue","mtime":1571797529786},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: \"Article\",\n    props: {\n        title: {\n            type: String\n        },\n        avatar: {\n            type: String\n        },\n        avatarSize: {\n            type: [String, Number],\n            default: 24\n        },\n        content: {\n            type: String\n        },\n        did: {\n            type: String\n        },\n        someone: {\n            type: String\n        },\n        something: {\n            type: String\n        },\n        sometime: {\n            type: [String, Date]\n        },\n    },\n    data() {\n        return {\n            showTitle: false,\n            showContent: false\n        }\n    },\n    computed: {\n        localSomeTime() {\n            const time = this.sometime;\n            const type = typeof time;\n            if (type === 'string') return time;\n            else if (type === 'object') return time.toFormatString();\n            return '0000-00-00 00:00:00';\n        }\n    },\n    mounted() {\n        this.showContent = this.$slots.content !== undefined;\n        this.showTitle = this.$slots.title !== undefined;\n    }\n}\n",{"version":3,"sources":["Article.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Article.vue","sourceRoot":"src/components/Article","sourcesContent":["<template>\n    <section class=\"article\">\n        <template v-if=\"title\">\n            <h2 class=\"article-title\">{{title}}</h2>\n        </template>\n        <template v-else-if=\"showTitle\">\n            <h2 class=\"article-title\">\n                <slot name=\"title\"/>\n            </h2>\n        </template>\n\n        <template v-if=\"content\">\n            <p class=\"article-content\">{{content}}</p>\n        </template>\n        <template v-else-if=\"showContent\">\n            <p class=\"article-content\">\n                <slot name=\"content\"/>\n            </p>\n        </template>\n\n        <span class=\"article-footer\">\n            <template v-if=\"avatar\">\n                <a-avatar class=\"avatar\" :src=\"avatar\" :size=\"avatarSize\"/>\n            </template>\n            <template v-if=\"someone\">\n                <a>{{someone}}</a>\n            </template>\n            <template v-if=\"did\">\n                <a>{{did}}</a>\n            </template>\n            <template v-if=\"something\">\n                <a>{{something}}</a>\n                åœ¨\n            </template>\n            <template v-if=\"localSomeTime\">\n                <span>{{localSomeTime}}</span>\n            </template>\n        </span>\n    </section>\n</template>\n\n<script>\n    export default {\n        name: \"Article\",\n        props: {\n            title: {\n                type: String\n            },\n            avatar: {\n                type: String\n            },\n            avatarSize: {\n                type: [String, Number],\n                default: 24\n            },\n            content: {\n                type: String\n            },\n            did: {\n                type: String\n            },\n            someone: {\n                type: String\n            },\n            something: {\n                type: String\n            },\n            sometime: {\n                type: [String, Date]\n            },\n        },\n        data() {\n            return {\n                showTitle: false,\n                showContent: false\n            }\n        },\n        computed: {\n            localSomeTime() {\n                const time = this.sometime;\n                const type = typeof time;\n                if (type === 'string') return time;\n                else if (type === 'object') return time.toFormatString();\n                return '0000-00-00 00:00:00';\n            }\n        },\n        mounted() {\n            this.showContent = this.$slots.content !== undefined;\n            this.showTitle = this.$slots.title !== undefined;\n        }\n    }\n</script>\n"]}]}