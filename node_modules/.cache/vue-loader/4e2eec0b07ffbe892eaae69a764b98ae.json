{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/login/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/login/Login.vue","mtime":1571898558783},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Config from '@/config';\nimport storage from '@/utils/storage'\nimport Mixin from './mixin';\nimport {mapState, mapMutations} from 'vuex';\n\nexport default {\n    name: 'Login',\n    mixins: [Mixin],\n    data() {\n        return {\n            loading: false,\n            message: ''\n        }\n    },\n    computed: {\n        ...mapState({\n            title: state => state.setting.title\n        })\n    },\n    mounted() {\n        storage.clear();\n    },\n    methods: {\n        ...mapMutations({\n            setUser: 'account/setUser'\n        }),\n        bindClickSubmit(e) {\n            e.preventDefault();\n            this.form.validateFieldsAndScroll((err, values) => {\n                if (!err) {\n                    this.loading = true;\n                    this.message = '';\n                    setTimeout(() => {\n                        let user = Config.users.filter(user => {\n                            return user.username === values.username && user.password === values.password;\n                        })[0];\n\n                        if (user) {\n                            user.time = new Date().toLocaleString();\n                            user.role = '管理员';\n                            this.setUser(user);\n                            this.$router.push(\"/\");\n                        } else this.message = '用户名或密码错误！';\n\n                        this.loading = false;\n                    }, 300);\n                }\n            });\n        },\n    },\n};\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\n    <a-layout style=\"min-height: 100vh\">\n\n        <a-layout-header style=\"background: transparent; box-shadow: none\"/>\n\n        <a-layout-content>\n            <img src=\"../../assets/logo.svg\" alt=\"logo\" class=\"ma-auto mb-3\"\n                 style=\"display: block; height: 64px; width: 64px;\">\n\n            <h1 class=\"text-center\">{{title}}</h1>\n\n            <a-form :style=\"formStyles\" :form=\"form\" @submit=\"bindClickSubmit\">\n                <a-form-item>\n                    <a-input size=\"large\" placeholder=\"账号\" type=\"text\"\n                             v-decorator=\"rules.username\">\n                        <a-icon slot=\"prefix\" type=\"user\" style=\"color: rgba(0, 0, 0, .25)\"/>\n                    </a-input>\n                </a-form-item>\n                <a-form-item>\n                    <a-input size=\"large\" placeholder=\"密码\" type=\"password\"\n                             v-decorator=\"rules.password\">\n                        <a-icon slot=\"prefix\" type=\"lock\" style=\"color: rgba(0,0,0,.25)\"/>\n                    </a-input>\n                </a-form-item>\n                <a-form-item>\n                    <a-checkbox v-decorator=\"rules.remember\">记住账号</a-checkbox>\n                    <a class=\"float-right\">忘记密码</a>\n                </a-form-item>\n                <a-form-item>\n                    <a-button size=\"large\" type=\"primary\" html-type=\"submit\" block :loading=\"loading\">登录</a-button>\n                </a-form-item>\n                <a-form-item>\n                    <a class=\"float-right\" @click=\"$router.push('/register')\">创建账号</a>\n                </a-form-item>\n                <template v-if=\"message\">\n                    <a-form-item>\n                        <a-alert type=\"error\" :message=\"message\" banner/>\n                    </a-form-item>\n                </template>\n            </a-form>\n        </a-layout-content>\n    </a-layout>\n</template>\n\n<script>\n    import Config from '@/config';\n    import storage from '@/utils/storage'\n    import Mixin from './mixin';\n    import {mapState, mapMutations} from 'vuex';\n\n    export default {\n        name: 'Login',\n        mixins: [Mixin],\n        data() {\n            return {\n                loading: false,\n                message: ''\n            }\n        },\n        computed: {\n            ...mapState({\n                title: state => state.setting.title\n            })\n        },\n        mounted() {\n            storage.clear();\n        },\n        methods: {\n            ...mapMutations({\n                setUser: 'account/setUser'\n            }),\n            bindClickSubmit(e) {\n                e.preventDefault();\n                this.form.validateFieldsAndScroll((err, values) => {\n                    if (!err) {\n                        this.loading = true;\n                        this.message = '';\n                        setTimeout(() => {\n                            let user = Config.users.filter(user => {\n                                return user.username === values.username && user.password === values.password;\n                            })[0];\n\n                            if (user) {\n                                user.time = new Date().toLocaleString();\n                                user.role = '管理员';\n                                this.setUser(user);\n                                this.$router.push(\"/\");\n                            } else this.message = '用户名或密码错误！';\n\n                            this.loading = false;\n                        }, 300);\n                    }\n                });\n            },\n        },\n    };\n</script>\n"]}]}