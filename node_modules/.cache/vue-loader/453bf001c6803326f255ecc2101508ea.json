{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/Radio/Radio.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/Radio/Radio.vue","mtime":1568663656000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ComponentMixin from '../../mixins/component.mixin';\n\nexport default {\n    name: \"Radio\",\n    mixins: [ComponentMixin],\n    props: {\n        src: {\n            type: String,\n            default: ''\n        },\n        value: {\n            type: [String, Number]\n        },\n        title: {\n            type: [String, Number]\n        }\n    },\n    data() {\n        return {\n            checked: false\n        }\n    },\n    computed: {\n        panelStyles() {\n            return {\n                background: this.value,\n                color: 'white'\n            };\n        },\n        iconStyles() {\n            if (this.src) return {\n                color: '#1890ff',\n                top: '17px',\n                left: '20px'\n            };\n            else return {\n                left: '3px',\n                top: '3px',\n                right: '3px',\n                bottom: '3px',\n                color: 'white'\n            };\n        }\n    },\n    methods: {\n        bindClick() {\n            let value = this.value;\n            this.dispatch('RadioGroup', 'on-click', value);\n        }\n    }\n}\n",{"version":3,"sources":["Radio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Radio.vue","sourceRoot":"src/components/Radio","sourcesContent":["<template>\n    <a-tooltip>\n        <template slot=\"title\">\n            <span>{{title}}</span>\n        </template>\n        <div class=\"radio\" @click=\"bindClick\">\n            <template v-if=\"src\">\n                <div class=\"radio-img\">\n                    <img :src=\"src\" alt=\"img\"/>\n                </div>\n            </template>\n            <template v-else>\n                <div class=\"radio-panel\" :style=\"panelStyles\"></div>\n            </template>\n\n            <div class=\"radio-icon\" v-show=\"checked\" :style=\"iconStyles\">\n                <a-icon type=\"check\"/>\n            </div>\n        </div>\n    </a-tooltip>\n</template>\n\n<script>\n    import ComponentMixin from '../../mixins/component.mixin';\n\n    export default {\n        name: \"Radio\",\n        mixins: [ComponentMixin],\n        props: {\n            src: {\n                type: String,\n                default: ''\n            },\n            value: {\n                type: [String, Number]\n            },\n            title: {\n                type: [String, Number]\n            }\n        },\n        data() {\n            return {\n                checked: false\n            }\n        },\n        computed: {\n            panelStyles() {\n                return {\n                    background: this.value,\n                    color: 'white'\n                };\n            },\n            iconStyles() {\n                if (this.src) return {\n                    color: '#1890ff',\n                    top: '17px',\n                    left: '20px'\n                };\n                else return {\n                    left: '3px',\n                    top: '3px',\n                    right: '3px',\n                    bottom: '3px',\n                    color: 'white'\n                };\n            }\n        },\n        methods: {\n            bindClick() {\n                let value = this.value;\n                this.dispatch('RadioGroup', 'on-click', value);\n            }\n        }\n    }\n</script>\n"]}]}