{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/page/account/setting/menu/security/SettingSecurityModifyPass.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/page/account/setting/menu/security/SettingSecurityModifyPass.vue","mtime":1568663656000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport FormMixin from '../../../../../../mixins/form.mixin';\n\nconst labelCol = {span: 4};\nconst wrapperCol = {span: 20};\n\nexport default {\n    name: \"MenuSecurityModifyPass\",\n    mixins: [FormMixin],\n    props: {\n        value: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            labelCol,\n            wrapperCol\n        }\n    },\n    methods: {\n        bindClickOk() {\n            this.form.validateFields((err, values) => {\n                if (!err) {\n                    console.log('Received values of form: ', values);\n                    this.bindClickCancel();\n                }\n            });\n        },\n        bindClickCancel() {\n            this.form.resetFields();\n            this.$emit('input', false);\n        }\n    }\n}\n",{"version":3,"sources":["SettingSecurityModifyPass.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SettingSecurityModifyPass.vue","sourceRoot":"src/views/page/account/setting/menu/security","sourcesContent":["<template>\n    <a-modal title=\"修改密码\" :visible=\"value\" @ok=\"bindClickOk\" @cancel=\"bindClickCancel\">\n        <a-form :form=\"form\">\n            <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"旧密码\">\n                <a-input placeholder=\"请输入\" type=\"password\"\n                         v-decorator=\"['oldPassword', {trigger:'blur', rules:[{required: true, message:'旧密码不能为空'}]}]\"/>\n            </a-form-item>\n            <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"新密码\">\n                <a-input placeholder=\"请输入\" type=\"password\"\n                         v-decorator=\"['password', {trigger:'blur', rules:[{required: true, message:'新密码不能为空'}]}]\"/>\n            </a-form-item>\n            <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"确认密码\">\n                <a-input placeholder=\"请输入\" type=\"password\"\n                         v-decorator=\"['confirm', {trigger:'blur', rules:[{required: true, message:'确认不能为空'}, {validator: bindBlurConfirmPassword}]}]\"/>\n            </a-form-item>\n        </a-form>\n    </a-modal>\n</template>\n\n<script>\n    import FormMixin from '../../../../../../mixins/form.mixin';\n\n    const labelCol = {span: 4};\n    const wrapperCol = {span: 20};\n\n    export default {\n        name: \"MenuSecurityModifyPass\",\n        mixins: [FormMixin],\n        props: {\n            value: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data() {\n            return {\n                labelCol,\n                wrapperCol\n            }\n        },\n        methods: {\n            bindClickOk() {\n                this.form.validateFields((err, values) => {\n                    if (!err) {\n                        console.log('Received values of form: ', values);\n                        this.bindClickCancel();\n                    }\n                });\n            },\n            bindClickCancel() {\n                this.form.resetFields();\n                this.$emit('input', false);\n            }\n        }\n    }\n</script>\n"]}]}