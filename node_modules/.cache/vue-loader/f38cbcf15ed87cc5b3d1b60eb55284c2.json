{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/iTagGroup/iTagGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/iTagGroup/iTagGroup.vue","mtime":1571747592955},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: \"iTagGroup\",\n    props: {\n        showAll: {\n            type: Boolean,\n            default: true\n        },\n        tags: {\n            type: Array,\n            required: true,\n            default() {\n                return []\n            }\n        },\n        defaultSelectedTags: {\n            type: Array,\n            default() {\n                return []\n            }\n        }\n    },\n    data() {\n        return {\n            checkAll: false,\n            selectedTags: this.defaultSelectedTags\n        }\n    },\n    mounted() {\n        this.defaultCheckAll(this.defaultSelectedTags);\n    },\n    methods: {\n        defaultCheckAll(defaultSelectedTags) {\n            if (defaultSelectedTags.length === 0) this.checkAll = true;\n        },\n        bindClickAll() {\n            const checkAll = this.checkAll;\n            this.selectedTags = [];\n            this.checkAll = !checkAll;\n\n            this.$emit('change', this.selectedTags);\n        },\n        bindClickChange(checked, tag) {\n            const {selectedTags} = this;\n            this.selectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\n\n            this.checkAll = this.selectedTags.length === this.tags.length;\n\n            this.$emit('change', this.selectedTags);\n        }\n    },\n    watch: {\n        defaultSelectedTags(value) {\n            this.defaultSelectedTags(value);\n            this.selectedTags = value;\n        }\n    }\n}\n",{"version":3,"sources":["iTagGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"iTagGroup.vue","sourceRoot":"src/components/iTagGroup","sourcesContent":["<template>\n    <div class=\"i-tag-group\">\n        <template v-if=\"showAll\">\n            <a-checkable-tag class=\"i-tag-group-item\" :checked=\"checkAll\" @change=\"bindClickAll\">全部</a-checkable-tag>\n        </template>\n        <a-checkable-tag class=\"i-tag-group-item\"\n                         v-for=\"tag in tags\"\n                         :key=\"tag\"\n                         :checked=\"selectedTags.indexOf(tag) > -1\"\n                         @change=\"bindClickChange($event,tag)\">\n            {{tag}}\n        </a-checkable-tag>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"iTagGroup\",\n        props: {\n            showAll: {\n                type: Boolean,\n                default: true\n            },\n            tags: {\n                type: Array,\n                required: true,\n                default() {\n                    return []\n                }\n            },\n            defaultSelectedTags: {\n                type: Array,\n                default() {\n                    return []\n                }\n            }\n        },\n        data() {\n            return {\n                checkAll: false,\n                selectedTags: this.defaultSelectedTags\n            }\n        },\n        mounted() {\n            this.defaultCheckAll(this.defaultSelectedTags);\n        },\n        methods: {\n            defaultCheckAll(defaultSelectedTags) {\n                if (defaultSelectedTags.length === 0) this.checkAll = true;\n            },\n            bindClickAll() {\n                const checkAll = this.checkAll;\n                this.selectedTags = [];\n                this.checkAll = !checkAll;\n\n                this.$emit('change', this.selectedTags);\n            },\n            bindClickChange(checked, tag) {\n                const {selectedTags} = this;\n                this.selectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\n\n                this.checkAll = this.selectedTags.length === this.tags.length;\n\n                this.$emit('change', this.selectedTags);\n            }\n        },\n        watch: {\n            defaultSelectedTags(value) {\n                this.defaultSelectedTags(value);\n                this.selectedTags = value;\n            }\n        }\n    }\n</script>\n"]}]}