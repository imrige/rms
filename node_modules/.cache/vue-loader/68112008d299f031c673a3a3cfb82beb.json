{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/page/system/user/UserModify.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/page/system/user/UserModify.vue","mtime":1568663656000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {RoleApi, UserApi} from '@/api';\nimport {FormMixin} from '@/mixins';\nimport Pagination from \"@/common/domain/Pagination\";\n\nlet roles = {};\n\nexport default {\n    name: \"UserModify\",\n    mixins: [FormMixin],\n    props: {\n        value: {\n            type: Boolean,\n            default: false\n        },\n        user: {\n            type: Object,\n            default() {\n                return {}\n            }\n        }\n    },\n    data() {\n        return {\n            roles,\n            localUser: {}\n        }\n    },\n    methods: {\n        getRoles() {\n            RoleApi.get(new Pagination(1, 1000)).then(res => this.roles = res);\n        },\n        modifyUser(user) {\n            UserApi.modify(user).then(() => {\n                this.bindClickCancel();\n                this.$message.success(\"修改成功\");\n                this.$emit(\"success\");\n            })\n        },\n        bindClickOk() {\n            this.form.validateFields((err, values) => {\n                if (!err) {\n                    values = Object.assign(this.localUser, values);\n                    this.modifyUser(values);\n                }\n            });\n        },\n        bindClickCancel() {\n            this.form.resetFields();\n            this.$emit('input', false);\n        },\n    },\n    watch: {\n        value() {\n            this.getRoles();\n        },\n        user(value) {\n            this.localUser = this.$_.cloneDeep(value);\n            this.localUser.roleId = this.localUser.roleId ? this.localUser.roleId.split(',') : [];\n        }\n    }\n}\n",{"version":3,"sources":["UserModify.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserModify.vue","sourceRoot":"src/views/page/system/user","sourcesContent":["<template>\n    <a-modal title=\"修改用户\" :visible=\"value\" @cancel=\"bindClickCancel\" @ok=\"bindClickOk\" okText=\"提交\" cancelText=\"取消\">\n        <a-form :form=\"form\">\n            <a-form-item label=\"用户名\" v-bind=\"formItemLayout\">\n                <a-input v-decorator=\"[\n                    'userName',\n                    {\n                        initialValue: localUser.userName,\n                        rules: [\n                            {required: true, message: '用户名不能为空'}\n                        ],\n                        validateTrigger: ['blur']\n                    }\n                ]\" placeholder=\"请输入\"/>\n            </a-form-item>\n            <a-form-item label=\"角色\" v-bind=\"formItemLayout\">\n                <a-select v-decorator=\"[\n                    'roleId',\n                    {\n                        initialValue: localUser.roleId,\n                        rules: [\n                            {required: true, message: '用户名不能为空'}\n                        ],\n                        validateTrigger: ['blur']\n                    }\n                ]\" placeholder=\"请选择\" mode=\"multiple\">\n                    <a-select-option v-for=\"item in roles.records\" :key=\"item.roleId\" :value=\"item.roleId\">\n                        {{item.roleName}}\n                    </a-select-option>\n                </a-select>\n            </a-form-item>\n        </a-form>\n    </a-modal>\n</template>\n\n<script>\n    import {RoleApi, UserApi} from '@/api';\n    import {FormMixin} from '@/mixins';\n    import Pagination from \"@/common/domain/Pagination\";\n\n    let roles = {};\n\n    export default {\n        name: \"UserModify\",\n        mixins: [FormMixin],\n        props: {\n            value: {\n                type: Boolean,\n                default: false\n            },\n            user: {\n                type: Object,\n                default() {\n                    return {}\n                }\n            }\n        },\n        data() {\n            return {\n                roles,\n                localUser: {}\n            }\n        },\n        methods: {\n            getRoles() {\n                RoleApi.get(new Pagination(1, 1000)).then(res => this.roles = res);\n            },\n            modifyUser(user) {\n                UserApi.modify(user).then(() => {\n                    this.bindClickCancel();\n                    this.$message.success(\"修改成功\");\n                    this.$emit(\"success\");\n                })\n            },\n            bindClickOk() {\n                this.form.validateFields((err, values) => {\n                    if (!err) {\n                        values = Object.assign(this.localUser, values);\n                        this.modifyUser(values);\n                    }\n                });\n            },\n            bindClickCancel() {\n                this.form.resetFields();\n                this.$emit('input', false);\n            },\n        },\n        watch: {\n            value() {\n                this.getRoles();\n            },\n            user(value) {\n                this.localUser = this.$_.cloneDeep(value);\n                this.localUser.roleId = this.localUser.roleId ? this.localUser.roleId.split(',') : [];\n            }\n        }\n    }\n</script>\n"]}]}