{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/layout/header/Header.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/layout/header/Header.vue","mtime":1568663656000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport HeaderAvatar from \"./HeaderAvatar\";\nimport HeaderNotice from \"./HeaderNotice\";\nimport HeaderSetting from \"./HeaderSetting\";\nimport {Toolbar, ToolbarItem} from '../../../components/Toolbar';\nimport ComponentMixin from '../../../mixins/component.mixin';\nimport {mapState} from 'vuex';\n\nexport default {\n    name: \"Header\",\n    components: {HeaderAvatar, HeaderNotice, HeaderSetting, Toolbar, ToolbarItem},\n    mixins: [ComponentMixin],\n    props: {\n        value: {\n            type: Boolean,\n            default: false\n        }\n    },\n    computed: {\n        ...mapState({\n            user: state => state.account.user\n        }),\n    },\n    methods: {\n        bindClickCollapsed() {\n            this.dispatch('Layout', 'collapsed', !this.value);\n        }\n    }\n}\n",{"version":3,"sources":["Header.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Header.vue","sourceRoot":"src/views/layout/header","sourcesContent":["<template>\n    <a-layout-header class=\"layout-header\">\n        <div class=\"layout-header-trigger\" @click=\"bindClickCollapsed\">\n            <a-icon type=\"menu-fold\" :style=\"{transform: `rotate(${this.value ? 180 : 0}deg)`}\"/>\n        </div>\n\n        <Toolbar>\n            <ToolbarItem>\n                <p>\n                    <a-icon type=\"search\"/>\n                </p>\n            </ToolbarItem>\n            <ToolbarItem>\n                <a-tooltip placement=\"bottom\" title=\"使用帮助\">\n                    <p>\n                        <a-icon type=\"question-circle\"/>\n                    </p>\n                </a-tooltip>\n            </ToolbarItem>\n            <ToolbarItem>\n                <HeaderNotice/>\n            </ToolbarItem>\n            <ToolbarItem>\n                <HeaderAvatar :user=\"user\"/>\n            </ToolbarItem>\n            <ToolbarItem>\n                <HeaderSetting/>\n            </ToolbarItem>\n        </Toolbar>\n    </a-layout-header>\n</template>\n\n<script>\n    import HeaderAvatar from \"./HeaderAvatar\";\n    import HeaderNotice from \"./HeaderNotice\";\n    import HeaderSetting from \"./HeaderSetting\";\n    import {Toolbar, ToolbarItem} from '../../../components/Toolbar';\n    import ComponentMixin from '../../../mixins/component.mixin';\n    import {mapState} from 'vuex';\n\n    export default {\n        name: \"Header\",\n        components: {HeaderAvatar, HeaderNotice, HeaderSetting, Toolbar, ToolbarItem},\n        mixins: [ComponentMixin],\n        props: {\n            value: {\n                type: Boolean,\n                default: false\n            }\n        },\n        computed: {\n            ...mapState({\n                user: state => state.account.user\n            }),\n        },\n        methods: {\n            bindClickCollapsed() {\n                this.dispatch('Layout', 'collapsed', !this.value);\n            }\n        }\n    }\n</script>\n"]}]}