{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/TodoList/TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/TodoList/TodoList.vue","mtime":1568862056044},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Todo from \"@/common/domain/Todo\";\nimport TodoListItem from \"./TodoListItem\";\n\nexport default {\n    name: \"TodoList\",\n    components: {TodoListItem},\n    props: {\n        dataSource: {\n            type: Array,\n            default() {\n                return []\n            }\n        }\n    },\n    data() {\n        return {\n            isEdit: false,\n            localDataSource: []\n        }\n    },\n    mounted() {\n        this.localDataSource = this.dataSource;\n    },\n    methods: {\n        bindClickAdd() {\n            this.isEdit = true;\n        },\n        bindSubmit(e) {\n            const value = e.target.value;\n            if (value && value !== '') this.localDataSource.push(new Todo(value));\n            this.isEdit = false;\n        },\n        bindClickItem(item, index) {\n            this.$emit('click', item, index);\n        }\n    },\n    watch: {\n        dataSource(value) {\n            this.localDataSource = value;\n        }\n    }\n}\n",{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoList.vue","sourceRoot":"src/components/TodoList","sourcesContent":["<template>\n    <ul class=\"todo-list\">\n        <template v-if=\"localDataSource && localDataSource.length\">\n            <TodoListItem v-for=\"(item, index) in localDataSource\" :key=\"index\" :isComplete=\"item.isComplete\"\n                          @click=\"bindClickItem(item, index)\">\n                {{item.title}}\n            </TodoListItem>\n        </template>\n\n        <template v-if=\"isEdit\">\n            <li class=\"todo-list-item todo-list-item-add\" @click=\"bindClickAdd\">\n                <span class=\"todo-list-item-prefix\">\n                    <a-icon type=\"plus\"/>\n                </span>\n                <label class=\"todo-list-item-title\">\n                    <input type=\"text\" placeholder=\"添加待办\" @blur=\"bindSubmit\">\n                </label>\n            </li>\n        </template>\n        <template v-else>\n            <li class=\"todo-list-item todo-list-item-add\" @click=\"bindClickAdd\">\n                <span class=\"todo-list-item-prefix\">\n                    <a-icon type=\"plus\"/>\n                </span>\n                <span class=\"todo-list-item-title\">\n                    添加待办\n                </span>\n            </li>\n        </template>\n    </ul>\n</template>\n\n<script>\n    import Todo from \"@/common/domain/Todo\";\n    import TodoListItem from \"./TodoListItem\";\n\n    export default {\n        name: \"TodoList\",\n        components: {TodoListItem},\n        props: {\n            dataSource: {\n                type: Array,\n                default() {\n                    return []\n                }\n            }\n        },\n        data() {\n            return {\n                isEdit: false,\n                localDataSource: []\n            }\n        },\n        mounted() {\n            this.localDataSource = this.dataSource;\n        },\n        methods: {\n            bindClickAdd() {\n                this.isEdit = true;\n            },\n            bindSubmit(e) {\n                const value = e.target.value;\n                if (value && value !== '') this.localDataSource.push(new Todo(value));\n                this.isEdit = false;\n            },\n            bindClickItem(item, index) {\n                this.$emit('click', item, index);\n            }\n        },\n        watch: {\n            dataSource(value) {\n                this.localDataSource = value;\n            }\n        }\n    }\n</script>\n"]}]}