{"remainingRequest":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/src/layouts/LayoutView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/src/layouts/LayoutView.vue","mtime":1571886139523},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Mixin from '@/layouts/mixin';\nimport Header from \"@/layouts/header\";\nimport Content from \"@/layouts/content\";\nimport Sidebar from \"@/layouts/sidebar\";\nimport Footer from \"@/layouts/footer\";\nimport {mapState} from 'vuex';\n\nexport default {\n    name: \"LayoutView\",\n    components: {Header, Content, Sidebar, Footer},\n    mixins: [Mixin],\n    data() {\n        return {\n            collapsed: false,\n            sidebarWidth: 256,\n            sidebarCollapsedWidth: 80,\n            headerHeight: 64\n        }\n    },\n    computed: {\n        ...mapState({\n            theme: state => state.setting.theme,\n            user: state => state.account.user\n        }),\n        contentStyles() {\n            const fixHeader = this.theme.fixHeader;\n\n            if (fixHeader) return {\n                marginTop: `${this.headerHeight}px`\n            };\n            else return {};\n        }\n    },\n    mounted() {\n        this.collapsed = this.theme.collapsed;\n        this.$on('collapsed', value => this.collapsed = value);\n    }\n}\n",{"version":3,"sources":["LayoutView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LayoutView.vue","sourceRoot":"src/layouts","sourcesContent":["<template>\n    <a-layout :class=\"classes\">\n        <template v-if=\"isSideLayout\">\n            <Sidebar/>\n        </template>\n\n        <a-layout style=\"min-height: 100vh\">\n            <Header/>\n\n            <Content>\n                <keep-alive>\n                    <router-view v-if=\"$route.meta.keepalive\"/>\n                </keep-alive>\n\n                <router-view v-if=\"!$route.meta.keepalive\"/>\n            </Content>\n\n            <Footer/>\n        </a-layout>\n    </a-layout>\n</template>\n\n<script>\n    import Mixin from '@/layouts/mixin';\n    import Header from \"@/layouts/header\";\n    import Content from \"@/layouts/content\";\n    import Sidebar from \"@/layouts/sidebar\";\n    import Footer from \"@/layouts/footer\";\n    import {mapState} from 'vuex';\n\n    export default {\n        name: \"LayoutView\",\n        components: {Header, Content, Sidebar, Footer},\n        mixins: [Mixin],\n        data() {\n            return {\n                collapsed: false,\n                sidebarWidth: 256,\n                sidebarCollapsedWidth: 80,\n                headerHeight: 64\n            }\n        },\n        computed: {\n            ...mapState({\n                theme: state => state.setting.theme,\n                user: state => state.account.user\n            }),\n            contentStyles() {\n                const fixHeader = this.theme.fixHeader;\n\n                if (fixHeader) return {\n                    marginTop: `${this.headerHeight}px`\n                };\n                else return {};\n            }\n        },\n        mounted() {\n            this.collapsed = this.theme.collapsed;\n            this.$on('collapsed', value => this.collapsed = value);\n        }\n    }\n</script>\n\n<style lang=\"scss\" src=\"./Layout.scss\"/>\n"]}]}