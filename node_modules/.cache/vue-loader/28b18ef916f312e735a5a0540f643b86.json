{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/page/dashboard/monitor/Monitor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/page/dashboard/monitor/Monitor.vue","mtime":1568793227855},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {RedisApi, ServerApi} from '@/api';\nimport {Chart, Information, InformationItem} from \"@/components\";\n\nlet systemInfo = {},\n    systemInfoForChart = [],\n    jvmInfo = {},\n    tomcatInfo = {},\n    redisMemoryInfo = [],\n    redisKeySize = [];\n\nexport default {\n    name: \"Monitor\",\n    inject: ['gutter'],\n    components: {Chart, Information, InformationItem},\n    data() {\n        return {\n            loading: false,\n            jvmInfo,\n            systemInfo,\n            systemInfoForChart,\n            tomcatInfo,\n            redisMemoryInfo,\n            redisKeySize,\n        }\n    },\n    mounted() {\n    },\n    beforeDestroy() {\n    },\n    methods: {\n        getInfo() {\n            // this.getJVMInfo();\n            // this.getServerInfo();\n            // this.getTomcatInfo();\n            this.getRedisMemoryInfo();\n        },\n        getTomcatInfo() {\n            ServerApi.getTomcatInfoSync().then(res => this.tomcatInfo = res);\n        },\n        getJVMInfo() {\n            ServerApi.getJVMInfoSync().then(res => this.jvmInfo = res);\n        },\n        getServerInfo() {\n            ServerApi.getSystemInfoSync().then(res => {\n                this.systemInfo = res;\n\n                if (this.systemInfoForChart.length >= 5) this.systemInfoForChart.shift();\n                this.systemInfoForChart.push({\n                    time_stamp: new Date().toFormatString(\"HH:mm:ss\"),\n                    cpu_usage: Number(this.systemInfo.cpu_usage * 100).toFixed(2)\n                });\n                console.log(Number(this.systemInfo.cpu_usage * 100).toFixed(2));\n            });\n        },\n        getRedisInfo() {\n            RedisApi.getRedisInfo().then(res => {\n                console.log(res[38]);\n                console.log(res);\n            });\n        },\n        getRedisMemoryInfo() {\n            RedisApi.getRedisMemoryInfo().then(res => {\n                if (this.redisMemoryInfo.length >= 5) this.redisMemoryInfo.shift();\n                this.redisMemoryInfo.push(res);\n            });\n        },\n        getRedisKeySize() {\n            RedisApi.getRedisKeySize().then(res => {\n                if (this.redisKeySize.length >= 5) this.redisKeySize.shift();\n                this.redisKeySize.push(res);\n            });\n        }\n    }\n}\n",{"version":3,"sources":["Monitor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Monitor.vue","sourceRoot":"src/views/page/dashboard/monitor","sourcesContent":["<template>\n    <a-row :gutter=\"gutter\">\n        <a-col :span=\"24\">\n            <a-row :gutter=\"24\">\n                <a-col :span=\"18\">\n                    <a-card title=\"活动实时交易情况\" :bordered=\"false\" :loading=\"loading\" class=\"margin-bottom-lg\">\n                        <Information align=\"center\" :split=\"false\">\n                            <InformationItem title=\"今日交易总额\" content=\"124,543,233元\"/>\n                            <InformationItem title=\"销售目标完成率\" content=\"92%\"/>\n                            <InformationItem title=\"剩余活动时间\" content=\"0\"/>\n                            <InformationItem title=\"每秒交易总额\" content=\"234元\"/>\n                        </Information>\n                    </a-card>\n                </a-col>\n                <a-col :span=\"6\">\n                    <a-card title=\"活动情况预测\" :bordered=\"false\" :loading=\"loading\" class=\"margin-bottom-lg\">\n                    </a-card>\n                    <a-card title=\"核券效率\" :bordered=\"false\" :loading=\"loading\" class=\"margin-bottom-lg\">\n                    </a-card>\n                </a-col>\n            </a-row>\n        </a-col>\n        <a-col :span=\"24\">\n            <a-row :gutter=\"24\">\n                <a-col :span=\"12\">\n                    <a-card title=\"各品类占比\" :bordered=\"false\" :loading=\"loading\" class=\"margin-bottom-lg\">\n                    </a-card>\n                </a-col>\n                <a-col :span=\"6\">\n                    <a-card title=\"热门搜索\" :bordered=\"false\" :loading=\"loading\" class=\"margin-bottom-lg\">\n                    </a-card>\n                </a-col>\n                <a-col :span=\"6\">\n                    <a-card title=\"资源剩余\" :bordered=\"false\" :loading=\"loading\" class=\"margin-bottom-lg\">\n                    </a-card>\n                </a-col>\n            </a-row>\n        </a-col>\n    </a-row>\n</template>\n\n<script>\n    import {RedisApi, ServerApi} from '@/api';\n    import {Chart, Information, InformationItem} from \"@/components\";\n\n    let systemInfo = {},\n        systemInfoForChart = [],\n        jvmInfo = {},\n        tomcatInfo = {},\n        redisMemoryInfo = [],\n        redisKeySize = [];\n\n    export default {\n        name: \"Monitor\",\n        inject: ['gutter'],\n        components: {Chart, Information, InformationItem},\n        data() {\n            return {\n                loading: false,\n                jvmInfo,\n                systemInfo,\n                systemInfoForChart,\n                tomcatInfo,\n                redisMemoryInfo,\n                redisKeySize,\n            }\n        },\n        mounted() {\n        },\n        beforeDestroy() {\n        },\n        methods: {\n            getInfo() {\n                // this.getJVMInfo();\n                // this.getServerInfo();\n                // this.getTomcatInfo();\n                this.getRedisMemoryInfo();\n            },\n            getTomcatInfo() {\n                ServerApi.getTomcatInfoSync().then(res => this.tomcatInfo = res);\n            },\n            getJVMInfo() {\n                ServerApi.getJVMInfoSync().then(res => this.jvmInfo = res);\n            },\n            getServerInfo() {\n                ServerApi.getSystemInfoSync().then(res => {\n                    this.systemInfo = res;\n\n                    if (this.systemInfoForChart.length >= 5) this.systemInfoForChart.shift();\n                    this.systemInfoForChart.push({\n                        time_stamp: new Date().toFormatString(\"HH:mm:ss\"),\n                        cpu_usage: Number(this.systemInfo.cpu_usage * 100).toFixed(2)\n                    });\n                    console.log(Number(this.systemInfo.cpu_usage * 100).toFixed(2));\n                });\n            },\n            getRedisInfo() {\n                RedisApi.getRedisInfo().then(res => {\n                    console.log(res[38]);\n                    console.log(res);\n                });\n            },\n            getRedisMemoryInfo() {\n                RedisApi.getRedisMemoryInfo().then(res => {\n                    if (this.redisMemoryInfo.length >= 5) this.redisMemoryInfo.shift();\n                    this.redisMemoryInfo.push(res);\n                });\n            },\n            getRedisKeySize() {\n                RedisApi.getRedisKeySize().then(res => {\n                    if (this.redisKeySize.length >= 5) this.redisKeySize.shift();\n                    this.redisKeySize.push(res);\n                });\n            }\n        }\n    }\n</script>\n"]}]}