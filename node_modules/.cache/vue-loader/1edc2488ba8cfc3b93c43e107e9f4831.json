{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/page/system/menu/MenuCreate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/page/system/menu/MenuCreate.vue","mtime":1568663656000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {MenuApi} from '@/api';\nimport {FormMixin} from '@/mixins';\nimport {Emoticon} from \"@/components\";\n\nlet menus = {};\nlet checkedParentId = [];\nlet defaultCheckedKeys = [];\n\nexport default {\n    name: \"MenuCreate\",\n    mixins: [FormMixin],\n    components: {Emoticon},\n    props: {\n        value: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            checkedParentId,\n            menus,\n            defaultCheckedKeys,\n            loading: false,\n            emoticon: false\n        }\n    },\n    methods: {\n        getMenus() {\n            return MenuApi.get().then(res => this.menus = res);\n        },\n        createMenu(menu) {\n            this.loading = true;\n\n            MenuApi.create(menu).then(() => {\n                this.bindClickClose();\n                this.$emit('success');\n                this.loading = false;\n            });\n        },\n        bindClickCheck(e) {\n            this.checkedParentId = e.checked;\n        },\n        bindClickSubmit() {\n            this.form.validateFields((err, values) => {\n                if (!err) {\n                    if (this.checkedParentId.length > 1) {\n                        this.$message.error(\"最多只能选择一个上级菜单\");\n                        return;\n                    }\n\n                    values.menuParentId = this.checkedParentId[0];\n                    this.createMenu(values);\n                }\n            });\n        },\n        bindClickClose() {\n            this.form.resetFields();\n            this.defaultCheckedKeys = [];\n            this.$emit('input', false);\n        },\n        bindClickEmoticon(value) {\n            this.form.setFieldsValue({\n                menuIcon: value\n            });\n        }\n    },\n    watch: {\n        value(value) {\n            if (value) this.getMenus();\n            this.defaultCheckedKeys = [];\n        }\n    }\n}\n",{"version":3,"sources":["MenuCreate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MenuCreate.vue","sourceRoot":"src/views/page/system/menu","sourcesContent":["<template>\n    <a-drawer title=\"新建菜单\" placement=\"right\" width=\"600\" @close=\"bindClickClose\" :visible=\"value\">\n\n        <a-alert message=\"新建/修改 菜单后，需要重新登录才能生效\" type=\"info\" showIcon class=\"margin-bottom-lg\"/>\n\n        <a-form :form=\"form\">\n            <a-form-item label=\"菜单名称\" v-bind=\"formItemLayout\">\n                <a-input v-decorator=\"menuDecorator.menuName\" placeholder=\"请输入\"/>\n            </a-form-item>\n            <a-form-item label=\"菜单路径\" v-bind=\"formItemLayout\">\n                <a-input v-decorator=\"menuDecorator.menuPath\" placeholder=\"请输入\"/>\n            </a-form-item>\n            <a-form-item label=\"菜单组件地址\" v-bind=\"formItemLayout\">\n                <a-input v-decorator=\"menuDecorator.menuComponent\" placeholder=\"请输入\"/>\n            </a-form-item>\n            <a-form-item label=\"菜单相关权限\" v-bind=\"formItemLayout\">\n                <a-select v-decorator=\"menuDecorator.menuPermission\" placeholder=\"请选择\"/>\n            </a-form-item>\n            <a-form-item label=\"菜单图标\" v-bind=\"formItemLayout\">\n                <a-input v-decorator=\"menuDecorator.menuIcon\" placeholder=\"请选择\">\n                    <a-icon slot=\"addonAfter\" type=\"smile\" @click=\"emoticon = true\"/>\n                </a-input>\n            </a-form-item>\n            <a-form-item label=\"上级菜单\" v-bind=\"formItemLayout\">\n                <a-tree checkable checkStrictly\n                        :defaultCheckedKeys=\"defaultCheckedKeys\" :treeData=\"menus.records.children\"\n                        @check=\"bindClickCheck\"/>\n            </a-form-item>\n        </a-form>\n\n        <div class=\"drawer-footer\">\n            <a-button @click=\"bindClickClose\">取消</a-button>\n            <a-button @click=\"bindClickSubmit\" type=\"primary\" :loading=\"loading\">提交</a-button>\n        </div>\n\n        <Emoticon v-model=\"emoticon\" @click=\"bindClickEmoticon\"/>\n    </a-drawer>\n</template>\n\n<script>\n    import {MenuApi} from '@/api';\n    import {FormMixin} from '@/mixins';\n    import {Emoticon} from \"@/components\";\n\n    let menus = {};\n    let checkedParentId = [];\n    let defaultCheckedKeys = [];\n\n    export default {\n        name: \"MenuCreate\",\n        mixins: [FormMixin],\n        components: {Emoticon},\n        props: {\n            value: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data() {\n            return {\n                checkedParentId,\n                menus,\n                defaultCheckedKeys,\n                loading: false,\n                emoticon: false\n            }\n        },\n        methods: {\n            getMenus() {\n                return MenuApi.get().then(res => this.menus = res);\n            },\n            createMenu(menu) {\n                this.loading = true;\n\n                MenuApi.create(menu).then(() => {\n                    this.bindClickClose();\n                    this.$emit('success');\n                    this.loading = false;\n                });\n            },\n            bindClickCheck(e) {\n                this.checkedParentId = e.checked;\n            },\n            bindClickSubmit() {\n                this.form.validateFields((err, values) => {\n                    if (!err) {\n                        if (this.checkedParentId.length > 1) {\n                            this.$message.error(\"最多只能选择一个上级菜单\");\n                            return;\n                        }\n\n                        values.menuParentId = this.checkedParentId[0];\n                        this.createMenu(values);\n                    }\n                });\n            },\n            bindClickClose() {\n                this.form.resetFields();\n                this.defaultCheckedKeys = [];\n                this.$emit('input', false);\n            },\n            bindClickEmoticon(value) {\n                this.form.setFieldsValue({\n                    menuIcon: value\n                });\n            }\n        },\n        watch: {\n            value(value) {\n                if (value) this.getMenus();\n                this.defaultCheckedKeys = [];\n            }\n        }\n    }\n</script>\n"]}]}