{"remainingRequest":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/src/layouts/menu/Menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/src/layouts/menu/Menu.vue","mtime":1571723831190},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapState} from 'vuex';\nimport Config from '@/config';\n\nexport default {\n    name: \"Menu\",\n    data() {\n        return {\n            routes: Config.routes,\n            rootSubmenuKeys: [],\n            openKeys: [],\n            selectedKeys: []\n        }\n    },\n    computed: {\n        ...mapState({\n            theme: state => state.setting.theme,\n            defaultTheme: state => state.setting.defaultTheme,\n        }),\n        mode() {\n            let {layout, collapsed} = this.theme;\n\n            if (layout === 'top') return 'horizontal';\n            else if (collapsed) return 'vertical';\n            else return 'inline';\n        }\n    },\n    mounted() {\n        this.getKeys();\n        this.rootSubmenuKeys = this.routes.map(item => {\n            return item.path;\n        });\n    },\n    methods: {\n        bindClick({key}) {\n            this.$router.push(key);\n        },\n        bindOpenChange(openKeys) {\n            const latestOpenKey = openKeys.find(key => this.openKeys.indexOf(key) === -1);\n            if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) this.openKeys = openKeys;\n            else this.openKeys = latestOpenKey ? [latestOpenKey] : [];\n        },\n        getKeys() {\n            let {matched} = this.$route;\n            let {layout} = this.theme;\n\n            if (layout === 'side') this.openKeys = [matched[1].path];\n            this.selectedKeys = [matched[2].path];\n        }\n    },\n    watch: {\n        $route() {\n            this.getKeys();\n        }\n    }\n}\n",{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Menu.vue","sourceRoot":"src/layouts/menu","sourcesContent":["<template>\n    <a-menu class=\"ant-layout-menu\"\n            :mode=\"mode\"\n            :theme=\"theme.style\"\n            :openKeys=\"openKeys\"\n            :selectedKeys=\"selectedKeys\"\n            :rootSubmenuKeys=\"rootSubmenuKeys\"\n            @click=\"bindClick\"\n            @openChange=\"bindOpenChange\">\n        <a-sub-menu v-for=\"item in routes\" :key=\"item.path\">\n            <template slot=\"title\">\n                <template v-if=\"item.meta.icon && item.meta.icon !== ''\">\n                    <a-icon :type=\"item.meta.icon\"/>\n                </template>\n                <span>{{item.name}}</span>\n            </template>\n            <template v-if=\"item.children && item.children.length\">\n                <a-menu-item v-for=\"_item in item.children\" :key=\"_item.path\">\n                    <template v-if=\"_item.meta.icon && _item.meta.icon !== ''\">\n                        <a-icon :type=\"_item.meta.icon\"/>\n                    </template>\n                    <span>{{_item.name}}</span>\n                </a-menu-item>\n            </template>\n        </a-sub-menu>\n    </a-menu>\n</template>\n\n<script>\n    import {mapState} from 'vuex';\n    import Config from '@/config';\n\n    export default {\n        name: \"Menu\",\n        data() {\n            return {\n                routes: Config.routes,\n                rootSubmenuKeys: [],\n                openKeys: [],\n                selectedKeys: []\n            }\n        },\n        computed: {\n            ...mapState({\n                theme: state => state.setting.theme,\n                defaultTheme: state => state.setting.defaultTheme,\n            }),\n            mode() {\n                let {layout, collapsed} = this.theme;\n\n                if (layout === 'top') return 'horizontal';\n                else if (collapsed) return 'vertical';\n                else return 'inline';\n            }\n        },\n        mounted() {\n            this.getKeys();\n            this.rootSubmenuKeys = this.routes.map(item => {\n                return item.path;\n            });\n        },\n        methods: {\n            bindClick({key}) {\n                this.$router.push(key);\n            },\n            bindOpenChange(openKeys) {\n                const latestOpenKey = openKeys.find(key => this.openKeys.indexOf(key) === -1);\n                if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) this.openKeys = openKeys;\n                else this.openKeys = latestOpenKey ? [latestOpenKey] : [];\n            },\n            getKeys() {\n                let {matched} = this.$route;\n                let {layout} = this.theme;\n\n                if (layout === 'side') this.openKeys = [matched[1].path];\n                this.selectedKeys = [matched[2].path];\n            }\n        },\n        watch: {\n            $route() {\n                this.getKeys();\n            }\n        }\n    }\n</script>\n"]}]}