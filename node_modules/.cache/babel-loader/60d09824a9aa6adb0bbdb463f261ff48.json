{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js??ref--13-0!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/Chart/mixin.js","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/Chart/mixin.js","mtime":1568768324971},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport G2 from '@antv/g2';\nexport default {\n  props: {\n    x: {\n      required: true,\n      type: String\n    },\n    y: {\n      required: true,\n      type: String\n    },\n    minValue: {\n      type: Number\n    },\n    maxValue: {\n      type: Number\n    },\n    name: {\n      type: String\n    },\n    simple: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: Array,\n      default: function _default() {\n        return ['#1890ff', '#d1e9ff', '#ced4d9', '#f0f2f3'];\n      }\n    },\n    forceFit: {\n      type: Boolean,\n      default: true\n    },\n    dataSource: {\n      type: Array,\n      required: true,\n      default: function _default() {\n        return [];\n      }\n    },\n    animate: {\n      type: Boolean,\n      default: true\n    },\n    theme: {\n      type: String,\n      default: 'default'\n    },\n    width: {\n      type: [Number, String],\n      default: '100%'\n    },\n    height: {\n      type: [Number, String],\n      default: 200\n    },\n    padding: {\n      type: [Number, Array],\n      default: function _default() {\n        return [16, 16, 32, 36];\n      }\n    }\n  },\n  methods: {\n    getChart: function getChart() {\n      var chart = new G2.Chart({\n        container: this.$refs.chart,\n        forceFit: this.forceFit,\n        height: this.height,\n        animate: this.animate,\n        padding: this.padding,\n        theme: this.padding\n      });\n      chart.source(this.dataSource);\n      chart.axis(\"\".concat(this.y), {\n        label: {\n          formatter: function formatter(val) {\n            return (val / 1000).toFixed(1) + 'k';\n          }\n        }\n      });\n      if (this.simple) chart.axis(false);\n      return chart;\n    }\n  }\n};",{"version":3,"sources":["/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/Chart/mixin.js"],"names":["G2","props","x","required","type","String","y","minValue","Number","maxValue","name","simple","Boolean","default","color","Array","forceFit","dataSource","animate","theme","width","height","padding","methods","getChart","chart","Chart","container","$refs","source","axis","label","formatter","val","toFixed"],"mappings":"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","sourcesContent":["import G2 from '@antv/g2';\n\nexport default {\n    props: {\n        x: {\n            required: true,\n            type: String\n        },\n        y: {\n            required: true,\n            type: String\n        },\n        minValue: {\n            type: Number\n        },\n        maxValue: {\n            type: Number\n        },\n        name: {\n            type: String,\n        },\n        simple: {\n            type: Boolean,\n            default: false\n        },\n        color: {\n            type: Array,\n            default() {\n                return ['#1890ff', '#d1e9ff', '#ced4d9', '#f0f2f3'];\n            }\n        },\n        forceFit: {\n            type: Boolean,\n            default: true\n        },\n        dataSource: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        },\n        animate: {\n            type: Boolean,\n            default: true\n        },\n        theme: {\n            type: String,\n            default: 'default'\n        },\n        width: {\n            type: [Number, String],\n            default: '100%'\n        },\n        height: {\n            type: [Number, String],\n            default: 200\n        },\n        padding: {\n            type: [Number, Array],\n            default() {\n                return [16, 16, 32, 36]\n            }\n        },\n    },\n    methods: {\n        getChart() {\n            let chart = new G2.Chart({\n                container: this.$refs.chart,\n                forceFit: this.forceFit,\n                height: this.height,\n                animate: this.animate,\n                padding: this.padding,\n                theme: this.padding\n            });\n            chart.source(this.dataSource);\n            chart.axis(`${this.y}`, {\n                label: {\n                    formatter: function formatter(val) {\n                        return (val / 1000).toFixed(1) + 'k';\n                    }\n                }\n            });\n            if (this.simple) chart.axis(false);\n            return chart;\n        }\n    }\n}\n"]}]}