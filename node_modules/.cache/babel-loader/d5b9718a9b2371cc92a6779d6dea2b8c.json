{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/Radio/RadioGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/components/Radio/RadioGroup.vue","mtime":1568663656000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\nimport { ComponentUtil } from '@/utils';\nexport default {\n  name: \"RadioGroup\",\n  props: {\n    value: {\n      type: [String, Number]\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.updateValue(this.value);\n    this.$on('on-click', function (value) {\n      if (value === _this.value) return;\n\n      _this.updateValue(value);\n\n      _this.$emit('change', value);\n    });\n  },\n  methods: {\n    updateValue: function updateValue(value) {\n      var radios = ComponentUtil.findComponentsDownward(this, 'Radio');\n      if (radios.length) radios.forEach(function (item) {\n        return item.checked = item.value === value;\n      });\n      this.$emit('input', value);\n    }\n  },\n  watch: {\n    value: function value(_value) {\n      this.updateValue(_value);\n    }\n  }\n};",{"version":3,"sources":["RadioGroup.vue"],"names":[],"mappings":";;;;;;;;;AAQA,SAAA,aAAA,QAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA;AADA;AADA,GAFA;AAOA,EAAA,OAPA,qBAOA;AAAA;;AACA,SAAA,WAAA,CAAA,KAAA,KAAA;AAEA,SAAA,GAAA,CAAA,UAAA,EAAA,UAAA,KAAA,EAAA;AACA,UAAA,KAAA,KAAA,KAAA,CAAA,KAAA,EAAA;;AAEA,MAAA,KAAA,CAAA,WAAA,CAAA,KAAA;;AACA,MAAA,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,KAAA;AACA,KALA;AAMA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA;AACA,UAAA,MAAA,GAAA,aAAA,CAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,CAAA;AACA,UAAA,MAAA,CAAA,MAAA,EAAA,MAAA,CAAA,OAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,OAAA,GAAA,IAAA,CAAA,KAAA,KAAA,KAAA;AAAA,OAAA;AAEA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA;AANA,GAjBA;AAyBA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,MADA,EACA;AACA,WAAA,WAAA,CAAA,MAAA;AACA;AAHA;AAzBA,CAAA","sourcesContent":["<template>\n    <div class=\"radio-group\">\n        <slot></slot>\n        <div class=\"radio-group-clear\"></div>\n    </div>\n</template>\n\n<script>\n    import {ComponentUtil} from '@/utils';\n\n    export default {\n        name: \"RadioGroup\",\n        props: {\n            value: {\n                type: [String, Number]\n            }\n        },\n        mounted() {\n            this.updateValue(this.value);\n\n            this.$on('on-click', value => {\n                if (value === this.value) return;\n\n                this.updateValue(value);\n                this.$emit('change', value);\n            });\n        },\n        methods: {\n            updateValue(value) {\n                const radios = ComponentUtil.findComponentsDownward(this, 'Radio');\n                if (radios.length) radios.forEach(item => item.checked = item.value === value);\n\n                this.$emit('input', value);\n            }\n        },\n        watch: {\n            value(value) {\n                this.updateValue(value);\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"src/components/Radio"}]}