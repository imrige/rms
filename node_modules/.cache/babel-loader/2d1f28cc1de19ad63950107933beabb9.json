{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js??ref--13-0!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/api/modules/Theme.js","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/api/modules/Theme.js","mtime":1571215782296},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { RequestUtil } from '@/utils';\nimport store from '@/store';\nexport default {\n  modify: function modify(theme) {\n    return RequestUtil.put('/theme', theme).then(function (res) {\n      if (res.data.code !== 0) return;\n      store.commit('setting/setTheme', theme);\n    });\n  }\n};",{"version":3,"sources":["/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/api/modules/Theme.js"],"names":["RequestUtil","store","modify","theme","put","then","res","data","code","commit"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,SAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe;AACXC,EAAAA,MADW,kBACJC,KADI,EACG;AACV,WAAOH,WAAW,CAACI,GAAZ,CAAgB,QAAhB,EAA0BD,KAA1B,EAAiCE,IAAjC,CAAsC,UAAAC,GAAG,EAAI;AAChD,UAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,KAAkB,CAAtB,EAAyB;AACzBP,MAAAA,KAAK,CAACQ,MAAN,CAAa,kBAAb,EAAiCN,KAAjC;AACH,KAHM,CAAP;AAIH;AANU,CAAf","sourcesContent":["import {RequestUtil} from '@/utils';\nimport store from '@/store';\n\nexport default {\n    modify(theme) {\n        return RequestUtil.put('/theme', theme).then(res => {\n            if (res.data.code !== 0) return;\n            store.commit('setting/setTheme', theme);\n        })\n    }\n}\n"]}]}