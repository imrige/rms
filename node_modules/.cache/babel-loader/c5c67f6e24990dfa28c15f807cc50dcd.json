{"remainingRequest":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/page/dashboard/monitor/Monitor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/src/views/page/dashboard/monitor/Monitor.vue","mtime":1568793227855},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Workbench/github/rms/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { RedisApi, ServerApi } from '@/api';\nimport { Chart, Information, InformationItem } from \"@/components\";\nvar systemInfo = {},\n    systemInfoForChart = [],\n    jvmInfo = {},\n    tomcatInfo = {},\n    redisMemoryInfo = [],\n    redisKeySize = [];\nexport default {\n  name: \"Monitor\",\n  inject: ['gutter'],\n  components: {\n    Chart: Chart,\n    Information: Information,\n    InformationItem: InformationItem\n  },\n  data: function data() {\n    return {\n      loading: false,\n      jvmInfo: jvmInfo,\n      systemInfo: systemInfo,\n      systemInfoForChart: systemInfoForChart,\n      tomcatInfo: tomcatInfo,\n      redisMemoryInfo: redisMemoryInfo,\n      redisKeySize: redisKeySize\n    };\n  },\n  mounted: function mounted() {},\n  beforeDestroy: function beforeDestroy() {},\n  methods: {\n    getInfo: function getInfo() {\n      // this.getJVMInfo();\n      // this.getServerInfo();\n      // this.getTomcatInfo();\n      this.getRedisMemoryInfo();\n    },\n    getTomcatInfo: function getTomcatInfo() {\n      var _this = this;\n\n      ServerApi.getTomcatInfoSync().then(function (res) {\n        return _this.tomcatInfo = res;\n      });\n    },\n    getJVMInfo: function getJVMInfo() {\n      var _this2 = this;\n\n      ServerApi.getJVMInfoSync().then(function (res) {\n        return _this2.jvmInfo = res;\n      });\n    },\n    getServerInfo: function getServerInfo() {\n      var _this3 = this;\n\n      ServerApi.getSystemInfoSync().then(function (res) {\n        _this3.systemInfo = res;\n        if (_this3.systemInfoForChart.length >= 5) _this3.systemInfoForChart.shift();\n\n        _this3.systemInfoForChart.push({\n          time_stamp: new Date().toFormatString(\"HH:mm:ss\"),\n          cpu_usage: Number(_this3.systemInfo.cpu_usage * 100).toFixed(2)\n        });\n\n        console.log(Number(_this3.systemInfo.cpu_usage * 100).toFixed(2));\n      });\n    },\n    getRedisInfo: function getRedisInfo() {\n      RedisApi.getRedisInfo().then(function (res) {\n        console.log(res[38]);\n        console.log(res);\n      });\n    },\n    getRedisMemoryInfo: function getRedisMemoryInfo() {\n      var _this4 = this;\n\n      RedisApi.getRedisMemoryInfo().then(function (res) {\n        if (_this4.redisMemoryInfo.length >= 5) _this4.redisMemoryInfo.shift();\n\n        _this4.redisMemoryInfo.push(res);\n      });\n    },\n    getRedisKeySize: function getRedisKeySize() {\n      var _this5 = this;\n\n      RedisApi.getRedisKeySize().then(function (res) {\n        if (_this5.redisKeySize.length >= 5) _this5.redisKeySize.shift();\n\n        _this5.redisKeySize.push(res);\n      });\n    }\n  }\n};",{"version":3,"sources":["Monitor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <a-row :gutter=\"gutter\">\n        <a-col :span=\"24\">\n            <a-row :gutter=\"24\">\n                <a-col :span=\"18\">\n                    <a-card title=\"活动实时交易情况\" :bordered=\"false\" :loading=\"loading\" class=\"margin-bottom-lg\">\n                        <Information align=\"center\" :split=\"false\">\n                            <InformationItem title=\"今日交易总额\" content=\"124,543,233元\"/>\n                            <InformationItem title=\"销售目标完成率\" content=\"92%\"/>\n                            <InformationItem title=\"剩余活动时间\" content=\"0\"/>\n                            <InformationItem title=\"每秒交易总额\" content=\"234元\"/>\n                        </Information>\n                    </a-card>\n                </a-col>\n                <a-col :span=\"6\">\n                    <a-card title=\"活动情况预测\" :bordered=\"false\" :loading=\"loading\" class=\"margin-bottom-lg\">\n                    </a-card>\n                    <a-card title=\"核券效率\" :bordered=\"false\" :loading=\"loading\" class=\"margin-bottom-lg\">\n                    </a-card>\n                </a-col>\n            </a-row>\n        </a-col>\n        <a-col :span=\"24\">\n            <a-row :gutter=\"24\">\n                <a-col :span=\"12\">\n                    <a-card title=\"各品类占比\" :bordered=\"false\" :loading=\"loading\" class=\"margin-bottom-lg\">\n                    </a-card>\n                </a-col>\n                <a-col :span=\"6\">\n                    <a-card title=\"热门搜索\" :bordered=\"false\" :loading=\"loading\" class=\"margin-bottom-lg\">\n                    </a-card>\n                </a-col>\n                <a-col :span=\"6\">\n                    <a-card title=\"资源剩余\" :bordered=\"false\" :loading=\"loading\" class=\"margin-bottom-lg\">\n                    </a-card>\n                </a-col>\n            </a-row>\n        </a-col>\n    </a-row>\n</template>\n\n<script>\n    import {RedisApi, ServerApi} from '@/api';\n    import {Chart, Information, InformationItem} from \"@/components\";\n\n    let systemInfo = {},\n        systemInfoForChart = [],\n        jvmInfo = {},\n        tomcatInfo = {},\n        redisMemoryInfo = [],\n        redisKeySize = [];\n\n    export default {\n        name: \"Monitor\",\n        inject: ['gutter'],\n        components: {Chart, Information, InformationItem},\n        data() {\n            return {\n                loading: false,\n                jvmInfo,\n                systemInfo,\n                systemInfoForChart,\n                tomcatInfo,\n                redisMemoryInfo,\n                redisKeySize,\n            }\n        },\n        mounted() {\n        },\n        beforeDestroy() {\n        },\n        methods: {\n            getInfo() {\n                // this.getJVMInfo();\n                // this.getServerInfo();\n                // this.getTomcatInfo();\n                this.getRedisMemoryInfo();\n            },\n            getTomcatInfo() {\n                ServerApi.getTomcatInfoSync().then(res => this.tomcatInfo = res);\n            },\n            getJVMInfo() {\n                ServerApi.getJVMInfoSync().then(res => this.jvmInfo = res);\n            },\n            getServerInfo() {\n                ServerApi.getSystemInfoSync().then(res => {\n                    this.systemInfo = res;\n\n                    if (this.systemInfoForChart.length >= 5) this.systemInfoForChart.shift();\n                    this.systemInfoForChart.push({\n                        time_stamp: new Date().toFormatString(\"HH:mm:ss\"),\n                        cpu_usage: Number(this.systemInfo.cpu_usage * 100).toFixed(2)\n                    });\n                    console.log(Number(this.systemInfo.cpu_usage * 100).toFixed(2));\n                });\n            },\n            getRedisInfo() {\n                RedisApi.getRedisInfo().then(res => {\n                    console.log(res[38]);\n                    console.log(res);\n                });\n            },\n            getRedisMemoryInfo() {\n                RedisApi.getRedisMemoryInfo().then(res => {\n                    if (this.redisMemoryInfo.length >= 5) this.redisMemoryInfo.shift();\n                    this.redisMemoryInfo.push(res);\n                });\n            },\n            getRedisKeySize() {\n                RedisApi.getRedisKeySize().then(res => {\n                    if (this.redisKeySize.length >= 5) this.redisKeySize.shift();\n                    this.redisKeySize.push(res);\n                });\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"src/views/page/dashboard/monitor"}]}