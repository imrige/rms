{"remainingRequest":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js??ref--13-0!/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/src/components/iLoadingBar/index.js","dependencies":[{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/src/components/iLoadingBar/index.js","mtime":1571207177244},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import iLoadingBar from \"./iLoadingBar.js\";\nimport \"./style.scss\";\nvar loadingBarInstance;\nvar color = 'primary';\nvar failedColor = 'error';\nvar height = 2;\nvar timer;\n\nfunction getLoadingBarInstance() {\n  loadingBarInstance = loadingBarInstance || iLoadingBar.newInstance({\n    color: color,\n    failedColor: failedColor,\n    height: height\n  });\n  return loadingBarInstance;\n}\n\nfunction _update(options) {\n  var instance = getLoadingBarInstance();\n  instance.update(options);\n}\n\nfunction hide() {\n  setTimeout(function () {\n    _update({\n      show: false\n    });\n\n    setTimeout(function () {\n      _update({\n        percent: 0\n      });\n    }, 200);\n  }, 800);\n}\n\nfunction clearTimer() {\n  if (timer) {\n    clearInterval(timer);\n    timer = null;\n  }\n}\n\nexport default {\n  start: function start() {\n    if (timer) return;\n    var percent = 0;\n\n    _update({\n      percent: percent,\n      status: 'success',\n      show: true\n    });\n\n    timer = setInterval(function () {\n      percent += Math.floor(Math.random() * 3 + 5);\n\n      if (percent > 95) {\n        clearTimer();\n      }\n\n      _update({\n        percent: percent,\n        status: 'success',\n        show: true\n      });\n    }, 100);\n  },\n  update: function update(percent) {\n    clearTimer();\n\n    _update({\n      percent: percent,\n      status: 'success',\n      show: true\n    });\n  },\n  finish: function finish() {\n    clearTimer();\n\n    _update({\n      percent: 100,\n      status: 'success',\n      show: true\n    });\n\n    hide();\n  },\n  error: function error() {\n    clearTimer();\n\n    _update({\n      percent: 100,\n      status: 'error',\n      show: true\n    });\n\n    hide();\n  },\n  config: function config(options) {\n    if (options.color) {\n      color = options.color;\n    }\n\n    if (options.failedColor) {\n      failedColor = options.failedColor;\n    }\n\n    if (options.height) {\n      height = options.height;\n    }\n  },\n  destroy: function destroy() {\n    clearTimer();\n    var instance = getLoadingBarInstance();\n    loadingBarInstance = null;\n    instance.destroy();\n  }\n};",{"version":3,"sources":["/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/src/components/iLoadingBar/index.js"],"names":["iLoadingBar","loadingBarInstance","color","failedColor","height","timer","getLoadingBarInstance","newInstance","update","options","instance","hide","setTimeout","show","percent","clearTimer","clearInterval","start","status","setInterval","Math","floor","random","finish","error","config","destroy"],"mappings":"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","sourcesContent":["import iLoadingBar from './iLoadingBar.js';\nimport './style.scss';\n\nlet loadingBarInstance;\nlet color = 'primary';\nlet failedColor = 'error';\nlet height = 2;\nlet timer;\n\nfunction getLoadingBarInstance() {\n    loadingBarInstance = loadingBarInstance || iLoadingBar.newInstance({\n        color: color,\n        failedColor: failedColor,\n        height: height\n    });\n\n    return loadingBarInstance;\n}\n\nfunction update(options) {\n    let instance = getLoadingBarInstance();\n\n    instance.update(options);\n}\n\nfunction hide() {\n    setTimeout(() => {\n        update({\n            show: false\n        });\n        setTimeout(() => {\n            update({\n                percent: 0\n            });\n        }, 200);\n    }, 800);\n}\n\nfunction clearTimer() {\n    if (timer) {\n        clearInterval(timer);\n        timer = null;\n    }\n}\n\nexport default {\n    start() {\n        if (timer) return;\n\n        let percent = 0;\n\n        update({\n            percent: percent,\n            status: 'success',\n            show: true\n        });\n\n        timer = setInterval(() => {\n            percent += Math.floor(Math.random() * 3 + 5);\n            if (percent > 95) {\n                clearTimer();\n            }\n            update({\n                percent: percent,\n                status: 'success',\n                show: true\n            });\n        }, 100);\n    },\n    update(percent) {\n        clearTimer();\n        update({\n            percent: percent,\n            status: 'success',\n            show: true\n        });\n    },\n    finish() {\n        clearTimer();\n        update({\n            percent: 100,\n            status: 'success',\n            show: true\n        });\n        hide();\n    },\n    error() {\n        clearTimer();\n        update({\n            percent: 100,\n            status: 'error',\n            show: true\n        });\n        hide();\n    },\n    config(options) {\n        if (options.color) {\n            color = options.color;\n        }\n        if (options.failedColor) {\n            failedColor = options.failedColor;\n        }\n        if (options.height) {\n            height = options.height;\n        }\n    },\n    destroy() {\n        clearTimer();\n        let instance = getLoadingBarInstance();\n        loadingBarInstance = null;\n        instance.destroy();\n    }\n};\n"]}]}