{"remainingRequest":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/src/layouts/menu/Menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/src/layouts/menu/Menu.vue","mtime":1571723831190},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/Users/rige/Desktop/Projects/Github/rms2/rms_web_vue/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport Config from '@/config';\nexport default {\n  name: \"Menu\",\n  data: function data() {\n    return {\n      routes: Config.routes,\n      rootSubmenuKeys: [],\n      openKeys: [],\n      selectedKeys: []\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    theme: function theme(state) {\n      return state.setting.theme;\n    },\n    defaultTheme: function defaultTheme(state) {\n      return state.setting.defaultTheme;\n    }\n  }), {\n    mode: function mode() {\n      var _this$theme = this.theme,\n          layout = _this$theme.layout,\n          collapsed = _this$theme.collapsed;\n      if (layout === 'top') return 'horizontal';else if (collapsed) return 'vertical';else return 'inline';\n    }\n  }),\n  mounted: function mounted() {\n    this.getKeys();\n    this.rootSubmenuKeys = this.routes.map(function (item) {\n      return item.path;\n    });\n  },\n  methods: {\n    bindClick: function bindClick(_ref) {\n      var key = _ref.key;\n      this.$router.push(key);\n    },\n    bindOpenChange: function bindOpenChange(openKeys) {\n      var _this = this;\n\n      var latestOpenKey = openKeys.find(function (key) {\n        return _this.openKeys.indexOf(key) === -1;\n      });\n      if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) this.openKeys = openKeys;else this.openKeys = latestOpenKey ? [latestOpenKey] : [];\n    },\n    getKeys: function getKeys() {\n      var matched = this.$route.matched;\n      var layout = this.theme.layout;\n      if (layout === 'side') this.openKeys = [matched[1].path];\n      this.selectedKeys = [matched[2].path];\n    }\n  },\n  watch: {\n    $route: function $route() {\n      this.getKeys();\n    }\n  }\n};",{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,MAAA,MAAA,UAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,MAAA,CAAA,MADA;AAEA,MAAA,eAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,KAAA,EAAA,eAAA,KAAA;AAAA,aAAA,KAAA,CAAA,OAAA,CAAA,KAAA;AAAA,KADA;AAEA,IAAA,YAAA,EAAA,sBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,OAAA,CAAA,YAAA;AAAA;AAFA,GAAA,CADA;AAKA,IAAA,IALA,kBAKA;AAAA,wBACA,KAAA,KADA;AAAA,UACA,MADA,eACA,MADA;AAAA,UACA,SADA,eACA,SADA;AAGA,UAAA,MAAA,KAAA,KAAA,EAAA,OAAA,YAAA,CAAA,KACA,IAAA,SAAA,EAAA,OAAA,UAAA,CAAA,KACA,OAAA,QAAA;AACA;AAXA,IAVA;AAuBA,EAAA,OAvBA,qBAuBA;AACA,SAAA,OAAA;AACA,SAAA,eAAA,GAAA,KAAA,MAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,aAAA,IAAA,CAAA,IAAA;AACA,KAFA,CAAA;AAGA,GA5BA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,2BACA;AAAA,UAAA,GAAA,QAAA,GAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA,KAHA;AAIA,IAAA,cAJA,0BAIA,QAJA,EAIA;AAAA;;AACA,UAAA,aAAA,GAAA,QAAA,CAAA,IAAA,CAAA,UAAA,GAAA;AAAA,eAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,MAAA,CAAA,CAAA;AAAA,OAAA,CAAA;AACA,UAAA,KAAA,eAAA,CAAA,OAAA,CAAA,aAAA,MAAA,CAAA,CAAA,EAAA,KAAA,QAAA,GAAA,QAAA,CAAA,KACA,KAAA,QAAA,GAAA,aAAA,GAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACA,KARA;AASA,IAAA,OATA,qBASA;AAAA,UACA,OADA,GACA,KAAA,MADA,CACA,OADA;AAAA,UAEA,MAFA,GAEA,KAAA,KAFA,CAEA,MAFA;AAIA,UAAA,MAAA,KAAA,MAAA,EAAA,KAAA,QAAA,GAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACA,WAAA,YAAA,GAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACA;AAfA,GA7BA;AA8CA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,OAAA;AACA;AAHA;AA9CA,CAAA","sourcesContent":["<template>\n    <a-menu class=\"ant-layout-menu\"\n            :mode=\"mode\"\n            :theme=\"theme.style\"\n            :openKeys=\"openKeys\"\n            :selectedKeys=\"selectedKeys\"\n            :rootSubmenuKeys=\"rootSubmenuKeys\"\n            @click=\"bindClick\"\n            @openChange=\"bindOpenChange\">\n        <a-sub-menu v-for=\"item in routes\" :key=\"item.path\">\n            <template slot=\"title\">\n                <template v-if=\"item.meta.icon && item.meta.icon !== ''\">\n                    <a-icon :type=\"item.meta.icon\"/>\n                </template>\n                <span>{{item.name}}</span>\n            </template>\n            <template v-if=\"item.children && item.children.length\">\n                <a-menu-item v-for=\"_item in item.children\" :key=\"_item.path\">\n                    <template v-if=\"_item.meta.icon && _item.meta.icon !== ''\">\n                        <a-icon :type=\"_item.meta.icon\"/>\n                    </template>\n                    <span>{{_item.name}}</span>\n                </a-menu-item>\n            </template>\n        </a-sub-menu>\n    </a-menu>\n</template>\n\n<script>\n    import {mapState} from 'vuex';\n    import Config from '@/config';\n\n    export default {\n        name: \"Menu\",\n        data() {\n            return {\n                routes: Config.routes,\n                rootSubmenuKeys: [],\n                openKeys: [],\n                selectedKeys: []\n            }\n        },\n        computed: {\n            ...mapState({\n                theme: state => state.setting.theme,\n                defaultTheme: state => state.setting.defaultTheme,\n            }),\n            mode() {\n                let {layout, collapsed} = this.theme;\n\n                if (layout === 'top') return 'horizontal';\n                else if (collapsed) return 'vertical';\n                else return 'inline';\n            }\n        },\n        mounted() {\n            this.getKeys();\n            this.rootSubmenuKeys = this.routes.map(item => {\n                return item.path;\n            });\n        },\n        methods: {\n            bindClick({key}) {\n                this.$router.push(key);\n            },\n            bindOpenChange(openKeys) {\n                const latestOpenKey = openKeys.find(key => this.openKeys.indexOf(key) === -1);\n                if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) this.openKeys = openKeys;\n                else this.openKeys = latestOpenKey ? [latestOpenKey] : [];\n            },\n            getKeys() {\n                let {matched} = this.$route;\n                let {layout} = this.theme;\n\n                if (layout === 'side') this.openKeys = [matched[1].path];\n                this.selectedKeys = [matched[2].path];\n            }\n        },\n        watch: {\n            $route() {\n                this.getKeys();\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"src/layouts/menu"}]}